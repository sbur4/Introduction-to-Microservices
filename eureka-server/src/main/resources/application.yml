server:
  port: ${SERVER_PORT:8761}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH:/}
  shutdown: graceful
  jetty:
    threads:
      max: 200
      min: 10
      idle-timeout: 60000
    connection-idle-timeout: 30000

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  application:
    name: netflix-eureka-server

  cloud:
    loadbalancer:
      cache:
        enabled: true
        capacity: 1000
        ttl: 30s
        stats: true
      configurations: caffeine
      services: resource-service,song-service

  cache:
    cache-names: resource-cache, song-cache

  lifecycle:
    timeout-per-shutdown-phase: 10s

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    registerWithEureka: false
    fetchRegistry: false

  server:
    enableSelfPreservation: false
    eviction-interval-timer-in-ms: 5000
    response-cache-update-interval-ms: 30000
    wait-time-in-ms-when-sync-empty: 0

  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15
    async-client-initialization: true

logging:
  pattern:
    console: '%highlight(%-5p) | %magenta(%d{ISO8601}{GMT}) | %cyan(%c) | %yellow(%m%ex%n)'
  level:
    root: INFO
    org:
      springframework:
        web: DEBUG
        web.servlet.mvc.method.annotation: DEBUG
        retry: DEBUG
        cloud:
          loadbalancer: DEBUG
          client:
            loadbalancer: DEBUG
            core: DEBUG
            cache: DEBUG
            blocking: DEBUG
            reactive: DEBUG
            retry: DEBUG
  com:
    epam: TRACE
    netflix:
      eureka: DEBUG
      discovery: DEBUG
      eureka.registry: TRACE
    github.benmanes.caffeine: WARN